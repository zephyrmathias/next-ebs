files:
  /etc/nginx/conf.d/proxy.conf:
    owner: root
    group: root
    mode: "000644"
    content: |
      proxy_cache_path /var/cache/nginx levels=1:2 keys_zone=STATIC:10m inactive=7d use_temp_path=off;

      server {
        listen 8080 default_server;

        if ($time_iso8601 ~ "^(\d{4})-(\d{2})-(\d{2})T(\d{2})") {
            set $year $1;
            set $month $2;
            set $day $3;
            set $hour $4;
        }

        access_log  /var/log/nginx/healthd/application.log.$year-$month-$day-$hour healthd;
        access_log  /var/log/nginx/access.log   main;

        location /images {
          add_header              X-Cache-Status  $upstream_cache_status;

          proxy_cache             STATIC;
          proxy_ignore_headers    Cache-Control;
          proxy_cache_valid       200 1d;
  
          proxy_pass              http://nodejs;
          proxy_set_header        Connection "";
          proxy_http_version      1.1;
          proxy_set_header        Host            $host;
          proxy_set_header        X-Real-IP       $remote_addr;
          proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
        }

        location / {
          set $redirect 0;
          if ($http_x_forwarded_proto != "https") {
            set $redirect 1;
          }
          if ($http_user_agent ~* "ELB-HealthChecker") {
            set $redirect 0;
          }
          if ($redirect = 1) {
            return 301 https://$host$request_uri;
          }
  
          proxy_pass              http://nodejs;
          proxy_set_header        Connection "";
          proxy_http_version      1.1;
          proxy_set_header        Host            $host;
          proxy_set_header        X-Real-IP       $remote_addr;
          proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
          proxy_cookie_path       / "/; secure; SameSite=lax";
        }

        add_header X-XSS-Protection "1; mode=block" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload" always;

        gzip on;
        gzip_comp_level 4;
        gzip_types text/plain text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript;
      }

  /opt/elasticbeanstalk/hooks/configdeploy/post/99_kill_default_nginx.sh:
    owner: root
    group: root
    mode: "000755"
    content: |
      #!/bin/bash -xe
      rm -f /etc/nginx/conf.d/00_elastic_beanstalk_proxy.conf
      if [[ -e /etc/init/nginx.conf ]] ; then
        echo Using initctl to stop and start nginx
        initctl stop nginx || true
        initctl start nginx
      else
        echo Using service to stop and start nginx
        service nginx stop 
        service nginx start
      fi

container_commands:
  removeconfig:
    command: "rm -f /tmp/deployment/config/#etc#nginx#conf.d#00_elastic_beanstalk_proxy.conf /etc/nginx/conf.d/00_elastic_beanstalk_proxy.conf"